

==================================================
File: run.sh
==================================================

#!/bin/sh

xrdb merge ~/.Xresources
nitrogen --restore &
xset r rate 200 50 &
xinput set-prop 9 "libinput Tapping Enabled" 1 &
xinput set-prop 9 "libinput Tapping Button Mapping Enabled" 0 1 &
sxhkd -c ~/.config/chadwm/sxhkd/sxhkdrc &
export QT_QPA_PLATFORM=xcb
export QT_AUTO_SCREEN_SCALE_FACTOR=0
export QT_QPA_PLATFORM=xcb
export QT_AUTO_SCREEN_SCALE_FACTOR=0
export _JAVA_AWT_WM_NONREPARENTING=1
picom &

dash ~/.config/chadwm/scripts/bar.sh &
while type chadwm >/dev/null; do chadwm && continue || break; done


==================================================
File: fetch
==================================================

#!/bin/bash
clear
c=3 b=4
for j in c b; do
  for i in {0..7}; do
    printf -v $j$i "%b" "\e[${!j}${i}m"
  done
done

user=$(whoami)
host=$(uname -a | awk '{print $2}')
memory=$(free -h)
os=$(source /etc/os-release && echo $PRETTY_NAME)
kernel=$(uname -sr)
wm="$(xprop -id $(xprop -root -notype | awk '$1=="_NET_SUPPORTING_WM_CHECK:"{print $5}') -notype -f _NET_WM_NAME 8t | grep "WM_NAME" | cut -f2 -d \")"
mem=$(free -m | sed -n 's/^Mem:\s\+[0-9]\+\s\+\([0-9]\+\)\s.\+/\1/p')
mem_total=$(free -m | awk '/^Mem:/ {print $2}')
pkgs="$(xbps-query -l | wc -l)"
shell=$(echo "$SHELL" | awk -F/ '{for ( i=1; i <= NF; i++) sub(".", substr(toupper($i),1,1) , $i); print $NF}')
colors=$(for i in {0..7}; do echo -en "\e[${1}$((30 + $i))m▁▁▁"; done)

get_uptime() {
  # Uptime works by retrieving the data in total seconds and then
  # converting that data into days, hours and minutes using simple
  # math.
  IFS=. read -r s _ </proc/uptime

  # Convert the uptime from seconds into days, hours and minutes.
  d=$((s / 60 / 60 / 24))
  h=$((s / 60 / 60 % 24))
  m=$((s / 60 % 60))

  # Only append days, hours and minutes if they're non-zero.
  case "$d" in [!0]*) uptime="${uptime}${d}d " ;; esac
  case "$h" in [!0]*) uptime="${uptime}${h}h " ;; esac
  case "$m" in [!0]*) uptime="${uptime}${m}m " ;; esac

  echo ${uptime:-0m}
}

init() {
  init=$(readlink /sbin/init)
  init=${init##*/}
  init=${init%%-*}
  export init
}
init

cat <<EOF
${c0} ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
${c0} ▎▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▎ ${c2} ${c0} ${c3} ${c0}${c1}  ${c0}▎ ${c1}${c4}${c1} ${c4}$user@${c1}$host
${c0} ▎                            ▎ ${c4}
${c0} ▎        ${c4}█▀▀▀▀▀▀▀▀▀█${c0}         ▎ ${c4}OS     ${c7} $os
${c0} ▎        ${c4}█         █${c0}         ▎ ${c4}Kernel ${c7} $kernel
${c0} ▎        ${c4}█  █   █  █${c0}         ▎ ${c4}WM     ${c7} $wm
${c0} ▎        ${c0}█         █${c0}         ▎ ${c4}Shell  ${c7} $shell
${c0} ▎        ${c0}▀█▄▄▄▄▄▄▄█▀${c0}         ▎ ${c4}Init   ${c7} $init
${c0} ▎                            ▎ ${c4}pkgs   ${c7} $pkgs
${c0} ▎                            ▎ ${c4}uptime ${c7} $(get_uptime)
${c0} ▎   ${c4}void    runit ^_^    ${c0} ▎ ${c4}memory ${c7} $mem / $mem_total$(echo MiB)
${c0} ▎▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▎ $colors
EOF

if [[ $1 == "-b" ]]; then
  for f in {0..6}; do
    echo -en "\033[$((f + 41))m\033[$((f + 30))m██▓▒░"
  done
  echo -en "\033[37m██\n"
  echo
  for f in {0..6}; do
    echo -en "\033[$((f + 41))m\033[1;$((f + 30))m██▓▒░"
  done
  echo -en "\033[1;37m██"
  echo -e "\033[0m"
  echo
else
  :
fi


==================================================
File: concatenated.txt
==================================================



==================================================
File: update_nvme_temp.sh
==================================================

#!/bin/bash
temp=$(nvme smart-log /dev/nvme0n1 2>/dev/null | grep -i temperature | head -1 | awk '{print $3}')
echo "$temp" > /tmp/nvme_temp

==================================================
File: bar.sh
==================================================

#!/bin/dash

# ^c$var^ = fg color
# ^b$var^ = bg color

interval=0

# load colors
. ~/.config/chadwm/scripts/bar_themes/tundra

cpu() {
  cpu_val=$(grep -o "^[^ ]*" /proc/loadavg)

  printf "^c$black^ ^b$green^ CPU"
  printf "^c$white^ ^b$grey^ $cpu_val ^b$black^"
}

pkg_updates() {
  #updates=$({ timeout 20 doas xbps-install -un 2>/dev/null || true; } | wc -l) # void
  updates=$({ timeout 20 checkupdates 2>/dev/null || true; } | wc -l) # arch
  # updates=$({ timeout 20 aptitude search '~U' 2>/dev/null || true; } | wc -l)  # apt (ubuntu, debian etc)

  if [ -z "$updates" ]; then
    printf "  ^c$green^    Fully Updated"
  else
    printf "  ^c$white^    $updates"" updates"
  fi
}

battery() {
  val="$(cat /sys/class/power_supply/BAT0/capacity)"
  printf "^c$black^ ^b$red^ BAT"
  printf "^c$white^ ^b$grey^ $val ^b$black^"

}

nvme_temp() {
  temp=$(cat /tmp/nvme_temp 2>/dev/null || echo "N/A")
  printf "^c$black^ ^b$blue^ NVME"
  printf "^c$white^ ^b$grey^ $temp°C ^b$black^"
}

brightness() {
  printf "^c$red^   "
  printf "^c$red^%.0f\n" $(cat /sys/class/backlight/*/brightness)
}

mem() {
  printf "^c$red^^b$black^  "
  printf "^c$red^ $(free -h | awk '/^Mem/ { print $3 }' | sed s/i//g)"
}

wlan() {
	case "$(cat /sys/class/net/wl*/operstate 2>/dev/null)" in
	up) printf "^c$black^ ^b$blue^ 󰤨 ^d^%s" " ^c$blue^Connected" ;;
	down) printf "^c$black^ ^b$blue^ 󰤭 ^d^%s" " ^c$blue^Disconnected" ;;
	esac
}

clock() {
	printf "^c$black^ ^b$darkblue^ 󱑆 "
	printf "^c$black^^b$blue^ $(date '+%H:%M')  "
}

while true; do

  [ $interval = 0 ] || [ $(($interval % 3600)) = 0 ] && updates=$(pkg_updates)
  interval=$((interval + 1))

  sleep 1 && xsetroot -name "$updates $(cpu) $(battery) $(nvme_temp) $(mem) $(wlan) $(clock)"
done


==================================================
File: license/fetch.md
==================================================

MIT License

Copyright (c) [2018] [Mohammad Fikri Omar]

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.


==================================================
File: bar_themes/dracula
==================================================

#!/bin/dash

# colors

black=#21222c
green=#50fa7b
white=#f8f8f2
grey=#282a36
blue=#d6acff
red=#ff5555
darkblue=#bd93f9


==================================================
File: bar_themes/gruvchad
==================================================

#!/bin/dash

# colors

black=#222526
green=#89b482
white=#c7b89d
grey=#2b2e2f
blue=#6f8faf
red=#ec6b64
darkblue=#6080a0


==================================================
File: bar_themes/catppuccin
==================================================

#!/bin/dash

# colors

black=#1E1D2D
green=#ABE9B3
white=#D9E0EE
grey=#282737
blue=#96CDFB
red=#F28FAD
darkblue=#83bae8


==================================================
File: bar_themes/nord
==================================================

#!/bin/dash

# colors

black=#2E3440
green=#A3BE8C
white=#D8DEE9
grey=#373d49
blue=#81A1C1
red=#BF616A
darkblue=#7292b2


==================================================
File: bar_themes/everforest
==================================================

#!/bin/dash

black=#2b3339
green=#a7c080
white=#d3c6aa
grey=#4e565c
blue=#7393b3
red=#e67e80
darkblue=#577b9f


==================================================
File: bar_themes/tundra
==================================================

#!/bin/dash

# tundra-alt colors

black=#111827
green=#A8C5B3
white=#E6EDF3
grey=#303542
blue=#A5B4FC
red=#FCA5A5
darkblue=#7f92ee


==================================================
File: bar_themes/tokyonight
==================================================

#!/bin/dash

# colors

black=#1a1b26
green=#9ece6a
white=#a9b1d6
grey=#24283b
blue=#7aa2f7
red=#f7768e
darkblue=$blue


==================================================
File: bar_themes/onedark
==================================================

#!/bin/dash

# colors

black=#1e222a
green=#7eca9c
white=#abb2bf
grey=#282c34
blue=#7aa2f7
red=#d47d85
darkblue=#668ee3
